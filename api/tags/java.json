{"name":"Java","slug":"Java","count":1,"postlist":[{"title":"java开发手册一面向对象","uid":"d1bd2738cb3df5b91e8dbed191b9a6e0","slug":"Java开发手册—面向对象","date":"2022-07-18T15:30:06.000Z","updated":"2025-03-11T03:18:36.913Z","comments":true,"path":"api/articles/Java开发手册—面向对象.json","keywords":null,"cover":"/logo/27524ac7880511ebb6edd017c2d2eca2.jpg","text":"声明此文章根据书籍《码出高效：Java开发手册》整理的读后笔记。仅交流学习使用。 引言面向对象编程(ec -Ori te Programming, OOP)是划...","permalink":"/post/Java开发手册—面向对象","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"面向对象","slug":"面向对象","count":1,"path":"api/categories/面向对象.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}","juejin":"","customs":{}}}},{"title":"Java文档注释","uid":"c89fcf3f80f5323c4d2b7488e0aabc7d","slug":"Java文档注释","date":"2022-06-07T10:30:06.000Z","updated":"2025-03-11T03:18:37.262Z","comments":true,"path":"api/articles/Java文档注释.json","keywords":null,"cover":null,"text":"引言Java 支持三种注释方式。前两种分别是 // 和 /* */，第三种被称作说明注释，它以 /** 开始，以 */结束。说明注释允许你在程序中嵌入关于程序的...","permalink":"/post/Java文档注释","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"java","slug":"java","count":4,"path":"api/categories/java.json"},{"name":"注释","slug":"java/注释","count":1,"path":"api/categories/java/注释.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"},{"name":"注释","slug":"注释","count":1,"path":"api/tags/注释.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java Stream 流式编程","uid":"21734e1cbf39a356733db81c004c61e6","slug":"Java Stream 流式编程","date":"2022-06-06T07:30:06.000Z","updated":"2025-03-11T03:18:34.966Z","comments":true,"path":"api/articles/Java Stream 流式编程.json","keywords":null,"cover":[],"text":"引言流是Java API的新成员，它允许你以声明性方式处理数据集合（通过查询语句来表达，而不是临时编写一个实现）。就现在来说，你可以把它们看成遍历数据集的高级迭...","permalink":"/post/Java Stream 流式编程","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[{"name":"java","slug":"java","count":4,"path":"api/categories/java.json"},{"name":"Stream","slug":"java/Stream","count":1,"path":"api/categories/java/Stream.json"},{"name":"流式编程","slug":"java/Stream/流式编程","count":1,"path":"api/categories/java/Stream/流式编程.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"},{"name":"Stream","slug":"Stream","count":1,"path":"api/tags/Stream.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java函数式编程","uid":"2b987db277ec8f53b5baaa150ea429a6","slug":"Java函数式编程","date":"2022-05-31T13:30:06.000Z","updated":"2025-03-11T03:18:36.624Z","comments":true,"path":"api/articles/Java函数式编程.json","keywords":null,"cover":null,"text":"引言什么是函数式编程，即可以把方法当做参数或者返回值传递或引用。在JavaScript中函数式编程已经很常见，但是Java Function是不能作为参数引用，...","permalink":"/post/Java函数式编程","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[{"name":"java","slug":"java","count":4,"path":"api/categories/java.json"},{"name":"函数式编程","slug":"java/函数式编程","count":1,"path":"api/categories/java/函数式编程.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"},{"name":"函数式编程","slug":"函数式编程","count":1,"path":"api/tags/函数式编程.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}