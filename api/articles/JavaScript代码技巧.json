{"title":"JavaScript代码技巧","uid":"91e0f6f330b5dca608acfed732198bf6","slug":"JavaScript代码技巧","date":"2022-05-16T15:05:06.000Z","updated":"2025-03-11T03:18:35.967Z","comments":true,"path":"api/articles/JavaScript代码技巧.json","keywords":null,"cover":"/logo/97b97ee1173042d5ba667df7ecbe43f6.png","content":"<h2 id=\"变量的声明\"><a href=\"#变量的声明\" class=\"headerlink\" title=\"变量的声明\"></a>变量的声明</h2><h3 id=\"var、const、let的区别\"><a href=\"#var、const、let的区别\" class=\"headerlink\" title=\"var、const、let的区别\"></a>var、const、let的区别</h3><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>var</th>\n<th>let</th>\n<th>const</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>定义常量</td>\n<td></td>\n<td></td>\n<td>√</td>\n</tr>\n<tr>\n<td>定义变量</td>\n<td>√</td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>可被释放</td>\n<td>√</td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>可被提升</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>重复定义检查</td>\n<td></td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>可用于块级作用域</td>\n<td></td>\n<td>√</td>\n<td>√</td>\n</tr>\n</tbody></table>\n<h3 id=\"多行变量声明的优化\"><a href=\"#多行变量声明的优化\" class=\"headerlink\" title=\"多行变量声明的优化\"></a>多行变量声明的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"number\">1</span>;  <span class=\"comment\">// 名称</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">2</span>;   <span class=\"comment\">// 年龄</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = <span class=\"number\">3</span>; <span class=\"comment\">// 班级</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 名称 年龄 班级</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, classes] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 特别多的变量,当需要换行时的格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, classes]</span><br><span class=\"line\">    = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 此方式默认值的设置,myClasses默认值设置3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses]</span><br><span class=\"line\">    = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">class</span> || <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明三个都是undefined的变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses] = [];</span><br><span class=\"line\"><span class=\"comment\">// 声明三个都是空的变量 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">4</span>).<span class=\"title function_\">join</span>().<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>) || <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">// 声明三个都是0的变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">4</span>).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;0&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明三个都是0的变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">3</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses] = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123;<span class=\"attr\">length</span>: <span class=\"number\">3</span>&#125;).<span class=\"title function_\">map</span>(<span class=\"function\">()=&gt;</span> <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组取值的优化\"><a href=\"#数组取值的优化\" class=\"headerlink\" title=\"数组取值的优化\"></a>数组取值的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = arr[<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr3 = arr[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [arr1, arr2, arr3] = arr;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"对象取值的优化\"><a href=\"#对象取值的优化\" class=\"headerlink\" title=\"对象取值的优化\"></a>对象取值的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> student = &#123;<span class=\"attr\">name</span>:<span class=\"number\">1</span>, <span class=\"attr\">age</span>:<span class=\"number\">2</span>, <span class=\"attr\">classes</span>:<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> name = student.<span class=\"property\">name</span>;   <span class=\"comment\">// 名称</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = student.<span class=\"property\">age</span>;     <span class=\"comment\">// 年龄</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = student.<span class=\"property\">classes</span>; <span class=\"comment\">// 班级</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name : name, age : age, classes : classes&#125; = student;</span><br><span class=\"line\"><span class=\"comment\">// 变量与属性名不相同 (key : value) key:JSON对象的属性名 value:变量名</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name : myName, age : myAge, classes : myClasses&#125; = student;</span><br><span class=\"line\"><span class=\"comment\">// 此种对象的默认值设置仅在等于undefined的时候触发Myclasses = 0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name : myName, age : myAge, classes : myClasses = <span class=\"number\">0</span>&#125; = student;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name , age , classes&#125; = student;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"逻辑与-、逻辑或-的使用\"><a href=\"#逻辑与-、逻辑或-的使用\" class=\"headerlink\" title=\"逻辑与 &amp;&amp; 、逻辑或 || 的使用\"></a>逻辑与 &amp;&amp; 、逻辑或 || 的使用</h3><p>在使用之前我们要理解逻辑与和逻辑或的重要特性,短路.<br><strong>逻辑与:</strong> 当前面为假时,则直接返回假,否则返回后面的结果<br><strong>逻辑或:</strong> 当前面为真时,则直接返回真,否则返回后面的结果</p>\n<h4 id=\"默认值的优化\"><a href=\"#默认值的优化\" class=\"headerlink\" title=\"默认值的优化\"></a>默认值的优化</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// myName默认值的优化</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (name) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> myName = name;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> myName = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> myName = name || <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">// 扩展:我们在函数调用时设置默认值</span></span><br><span class=\"line\"><span class=\"title function_\">getName</span>(myName || name);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"单行if语句的优化\"><a href=\"#单行if语句的优化\" class=\"headerlink\" title=\"单行if语句的优化\"></a>单行if语句的优化</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 单行if语句的优化</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(name)&#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\">name &amp;&amp; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取非空对象值的优化\"><a href=\"#取非空对象值的优化\" class=\"headerlink\" title=\"取非空对象值的优化\"></a>取非空对象值的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 取非空JSON值的优化</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> student = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> student1 = &#123;name : <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// student与student在代码逻辑中,只有一个有值,且我们要取出这个name,优先取student</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (student) &#123;</span><br><span class=\"line\">    name = student.<span class=\"property\">name</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(student1) &#123;</span><br><span class=\"line\">    name = student1.<span class=\"property\">name</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> student = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> student1 = &#123;name : <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> name = (student || student1)[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"><span class=\"comment\">// 或者</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = (student || student1).<span class=\"property\">name</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JSON的使用\"><a href=\"#JSON的使用\" class=\"headerlink\" title=\"JSON的使用\"></a>JSON的使用</h2><h3 id=\"JSON声明的优化\"><a href=\"#JSON声明的优化\" class=\"headerlink\" title=\"JSON声明的优化\"></a>JSON声明的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> student = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = <span class=\"number\">2</span>;</span><br><span class=\"line\">student.<span class=\"property\">name</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">student.<span class=\"property\">classes</span> = classes || <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> student = &#123;</span><br><span class=\"line\">    name : <span class=\"number\">1</span>,</span><br><span class=\"line\">    classes : classes || <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JSON取值的优化\"><a href=\"#JSON取值的优化\" class=\"headerlink\" title=\"JSON取值的优化\"></a>JSON取值的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> student = &#123;</span><br><span class=\"line\">    name : <span class=\"number\">1</span>,</span><br><span class=\"line\">    classes1 : <span class=\"literal\">null</span>,</span><br><span class=\"line\">    classes2 : <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 当classes1为空时取classes2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (student.<span class=\"property\">classes1</span>) &#123;</span><br><span class=\"line\">    classes = student.<span class=\"property\">classes1</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    classes = student.<span class=\"property\">classes2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = student.<span class=\"property\">classes1</span> || student.<span class=\"property\">classes2</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = student[<span class=\"string\">&quot;classes1&quot;</span>] || student[<span class=\"string\">&#x27;classes2&quot;];</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"条件运算符的使用\"><a href=\"#条件运算符的使用\" class=\"headerlink\" title=\"条件运算符的使用\"></a>条件运算符的使用</h2><h3 id=\"if-else-语句的优化\"><a href=\"#if-else-语句的优化\" class=\"headerlink\" title=\"if else 语句的优化\"></a>if else 语句的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> method = request.<span class=\"property\">method</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name = request.<span class=\"title function_\">getValue</span>(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name = request.<span class=\"title function_\">getValue</span>(<span class=\"string\">&quot;custpage_name&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> method = request.<span class=\"property\">method</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> name = request.<span class=\"title function_\">getValue</span>(method == <span class=\"string\">&#x27;GET&#x27;</span> ? <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;custpage_name&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> name = method == <span class=\"string\">&#x27;GET&#x27;</span> ? request.<span class=\"title function_\">getValue</span>(<span class=\"string\">&quot;name&quot;</span>) : request.<span class=\"title function_\">getValue</span>(<span class=\"string\">&quot;custpage_name&quot;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法调用的优化\"><a href=\"#方法调用的优化\" class=\"headerlink\" title=\"方法调用的优化\"></a>方法调用的优化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> isUp = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (isUp)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">up</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">down</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> isUp = <span class=\"literal\">false</span>;</span><br><span class=\"line\">isUp ? <span class=\"title function_\">up</span>() : <span class=\"title function_\">down</span>();</span><br><span class=\"line\"><span class=\"comment\">// 或者在函数的返回值使用条件运算符</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">jump</span>(<span class=\"params\">isUp</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> isUp ? <span class=\"title function_\">up</span>() : <span class=\"title function_\">down</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h2><h3 id=\"链式调用\"><a href=\"#链式调用\" class=\"headerlink\" title=\"链式调用\"></a>链式调用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> form = serverWidget.<span class=\"title function_\">createForm</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">title</span>: <span class=\"string\">&#x27;Thank you for your interest in Wolfe Electronics&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">hideNavBar</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlHeader = form.<span class=\"title function_\">addField</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">id</span>: <span class=\"string\">&#x27;custpage_header&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">type</span>: serverWidget.<span class=\"property\">FieldType</span>.<span class=\"property\">INLINEHTML</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">htmlHeader.<span class=\"title function_\">updateLayoutType</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">layoutType</span>: serverWidget.<span class=\"property\">FieldLayoutType</span>.<span class=\"property\">OUTSIDEABOVE</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">htmlHeader.<span class=\"title function_\">updateBreakType</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">breakType</span>: serverWidget.<span class=\"property\">FieldBreakType</span>.<span class=\"property\">STARTROW</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">htmlHeader.<span class=\"property\">defaultValue</span> = <span class=\"string\">&#x27;&lt;p style=\\&#x27;font-size:20px\\&#x27;&gt;We pride ourselves on providing the best&#x27;</span> + <span class=\"string\">&#x27; services and customer satisfaction. Please take a moment to fill out our survey.&lt;/p&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 链式调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> form = serverWidget.<span class=\"title function_\">createForm</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">title</span>: <span class=\"string\">&#x27;Thank you for your interest in Wolfe Electronics&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">hideNavBar</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlHeader = form.<span class=\"title function_\">addField</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">id</span>: <span class=\"string\">&#x27;custpage_header&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">type</span>: serverWidget.<span class=\"property\">FieldType</span>.<span class=\"property\">INLINEHTML</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">\t&#125;).<span class=\"title function_\">updateLayoutType</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">layoutType</span>: serverWidget.<span class=\"property\">FieldLayoutType</span>.<span class=\"property\">OUTSIDEABOVE</span></span><br><span class=\"line\">\t&#125;).<span class=\"title function_\">updateBreakType</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">breakType</span>: serverWidget.<span class=\"property\">FieldBreakType</span>.<span class=\"property\">STARTROW</span></span><br><span class=\"line\">\t&#125;).<span class=\"property\">defaultValue</span> = <span class=\"string\">&#x27;&lt;p style=\\&#x27;font-size:20px\\&#x27;&gt;We pride ourselves on providing the best&#x27;</span> + <span class=\"string\">&#x27; services and customer satisfaction. Please take a moment to fill out our survey.&lt;/p&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串拼接\"><a href=\"#字符串拼接\" class=\"headerlink\" title=\"字符串拼接\"></a>字符串拼接</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> n = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"string\">&#x27;3&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> y = <span class=\"string\">&#x27;4&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> string = n + <span class=\"string\">&quot;-&quot;</span> + b + <span class=\"string\">&quot;-&quot;</span> + s + <span class=\"string\">&quot;-&quot;</span> + y;</span><br><span class=\"line\"><span class=\"keyword\">let</span> string2 = n + b + s + y;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> n = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"string\">&#x27;3&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> y = <span class=\"string\">&#x27;4&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> string = [n, b ,s,y].<span class=\"title function_\">join</span>(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> string2 = n.<span class=\"title function_\">concat</span>(b, s, y);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符串拼接其他方式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">&quot;a-b-c-y&quot;</span>;</span><br><span class=\"line\">string = string.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;a&quot;</span>,a).<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;b&quot;</span>,b).<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;b&quot;</span>,b).<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;y&quot;</span>,y);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包含判断\"><a href=\"#包含判断\" class=\"headerlink\" title=\"包含判断\"></a>包含判断</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a == <span class=\"number\">1</span> || a == <span class=\"number\">2</span> || a == <span class=\"number\">3</span>)&#123; </span><br><span class=\"line\">    <span class=\"comment\">// doSomething</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 优化</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].<span class=\"title function_\">indexof</span>(a) &gt;= <span class=\"number\">0</span>)&#123; </span><br><span class=\"line\">    <span class=\"comment\">// doSomething</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组的简写方式\"><a href=\"#数组的简写方式\" class=\"headerlink\" title=\"数组的简写方式\"></a>数组的简写方式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 简写</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = [];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h3><p><strong>箭头函数</strong>就是<strong>函数</strong>的简写方式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doSomething</span>(<span class=\"params\">a, b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以下仅仅@NApiVersion 2.0以上可以使用</span></span><br><span class=\"line\"><span class=\"comment\">// 简写</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">doSomething</span> = (<span class=\"params\">a, b</span>) =&gt; &#123;<span class=\"keyword\">return</span> a + b;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 箭头函数的两个省略</span></span><br><span class=\"line\"><span class=\"comment\">// 1.当箭头左边只有一个参数时,可省略()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">a</span> =&gt;</span> &#123;<span class=\"keyword\">return</span> a + <span class=\"number\">1</span>;&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 2.当箭头右边只有一句话时,可省略&#123;&#125;与return</span></span><br><span class=\"line\"><span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a + b;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对象的keys、values的使用\"><a href=\"#对象的keys、values的使用\" class=\"headerlink\" title=\"对象的keys、values的使用\"></a>对象的keys、values的使用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> student = &#123;</span><br><span class=\"line\">    name : <span class=\"number\">1</span>,</span><br><span class=\"line\">    classes : <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取对象的Keys</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(student);   <span class=\"comment\">// expected output: [&quot;name&quot;, &quot;classes&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 获取对象的values</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(student); <span class=\"comment\">// expected output: [1, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断对象是否具有该属性</span></span><br><span class=\"line\">student.<span class=\"title function_\">hasOwnProperty</span>(<span class=\"string\">&quot;classes&quot;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(student).<span class=\"title function_\">indexof</span>(<span class=\"string\">&quot;name&quot;</span>) &gt;= <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组的常用函数\"><a href=\"#数组的常用函数\" class=\"headerlink\" title=\"数组的常用函数\"></a>数组的常用函数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// filter() 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。 </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> words = [<span class=\"string\">&#x27;spray&#x27;</span>, <span class=\"string\">&#x27;limit&#x27;</span>, <span class=\"string\">&#x27;elite&#x27;</span>, <span class=\"string\">&#x27;exuberant&#x27;</span>, <span class=\"string\">&#x27;destruction&#x27;</span>, <span class=\"string\">&#x27;present&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> result = words.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">word</span> =&gt;</span> word.<span class=\"property\">length</span> &gt; <span class=\"number\">6</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result);             <span class=\"comment\">// expected output: Array [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// find() 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"number\">5</span>, <span class=\"number\">12</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> found = array1.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">element</span> =&gt;</span> element &gt; <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(found);              <span class=\"comment\">// expected output: 12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// forEach() 方法对数组的每个元素执行一次给定的函数。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">array1.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">element</span> =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回false。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array1.<span class=\"title function_\">includes</span>(<span class=\"number\">2</span>));   <span class=\"comment\">// expected output: true</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pets = [<span class=\"string\">&#x27;cat&#x27;</span>, <span class=\"string\">&#x27;dog&#x27;</span>, <span class=\"string\">&#x27;bat&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(pets.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;cat&#x27;</span>)); <span class=\"comment\">// expected output: true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(pets.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;at&#x27;</span>));  <span class=\"comment\">// expected output: false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// map() 方法创建一个新数组，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>];     <span class=\"comment\">// pass a function to map</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> map1 = array1.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x * <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(map1);                <span class=\"comment\">// expected output: Array [2, 8, 18, 32]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reduce() 方法对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reducer</span> = (<span class=\"params\">accumulator, currentValue</span>) =&gt; accumulator + currentValue; </span><br><span class=\"line\"><span class=\"comment\">// 1 + 2 + 3 + 4</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array1.<span class=\"title function_\">reduce</span>(reducer));                                       <span class=\"comment\">// expected output: 10</span></span><br><span class=\"line\"><span class=\"comment\">// 5 + 1 + 2 + 3 + 4</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array1.<span class=\"title function_\">reduce</span>(reducer, <span class=\"number\">5</span>));                                    <span class=\"comment\">// expected output: 15</span></span><br></pre></td></tr></table></figure>\n<p>这些方法是ES6以上可以使用,但是我们想在ES6以下运用这些方法时,只需按照网址:<br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects&#x2F;Array</a><br>找到对应函数<br><img src=\"/post/JavaScript%E4%BB%A3%E7%A0%81%E6%8A%80%E5%B7%A7/20220517.jpg\" alt=\"20220517.png\"><br>polyfill复制粘贴就能使用.</p>\n<h3 id=\"字符串常用方法\"><a href=\"#字符串常用方法\" class=\"headerlink\" title=\"字符串常用方法\"></a>字符串常用方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// padEnd()  方法会用一个字符串填充当前字符串（如果需要的话则重复填充），返回填充后达到指定长度的字符串。从当前字符串的末尾（右侧）开始填充。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">10</span>);          <span class=\"comment\">// &quot;abc       &quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">10</span>, <span class=\"string\">&quot;foo&quot;</span>);   <span class=\"comment\">// &quot;abcfoofoof&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">6</span>, <span class=\"string\">&quot;123456&quot;</span>); <span class=\"comment\">// &quot;abc123&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padEnd</span>(<span class=\"number\">1</span>);           <span class=\"comment\">// &quot;abc&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// padStart() 方法用另一个字符串填充当前字符串(如果需要的话，会重复多次)，以便产生的字符串达到给定的长度。从当前字符串的左侧开始填充。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">10</span>);         <span class=\"comment\">// &quot;       abc&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">10</span>, <span class=\"string\">&quot;foo&quot;</span>);  <span class=\"comment\">// &quot;foofoofabc&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">6</span>,<span class=\"string\">&quot;123465&quot;</span>); <span class=\"comment\">// &quot;123abc&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">8</span>, <span class=\"string\">&quot;0&quot;</span>);     <span class=\"comment\">// &quot;00000abc&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;abc&#x27;</span>.<span class=\"title function_\">padStart</span>(<span class=\"number\">1</span>);          <span class=\"comment\">// &quot;abc&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这些方法注意事项同上.</p>\n<h2 id=\"优化的注意事项\"><a href=\"#优化的注意事项\" class=\"headerlink\" title=\"优化的注意事项\"></a>优化的注意事项</h2><p>在优化之前我们要理解为什么要优化代码,所有的优化都是为了<strong>代码的可读性</strong>,但在某些情况下以上的例子<strong>不优化可能比优化的可读性</strong>要好<br>例如 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明三个都是空的变量 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"literal\">null</span>;    <span class=\"comment\">// 名称</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"literal\">null</span>;     <span class=\"comment\">// 年龄</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = <span class=\"literal\">null</span>; <span class=\"comment\">// 班级</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化后</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [name, age, myClasses] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">4</span>).<span class=\"title function_\">join</span>().<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>) || <span class=\"literal\">null</span>;</span><br></pre></td></tr></table></figure>\n\n<p>难道上面name, age, classes的声明方式比下面的优化语句,可读性差吗?并没有,但是当声明10个、20个、30个以上空的变量时,下面的优化语句就比上面的可读性强.<br>当我们发现优化后并没有对可读性有提升时,就没必要优化.不过我们依然需要了解这些优化方式,以免我们需要增加代码可读性的时候,无从下手,或者不理解别人的代码.可读性不强的代码千千万万,优化的方式也多种多样,我们应当不放过自己可读性不强的代码,记住别人好的优化方式.各位还有别的案例或者优化方式,都可以自己更新这个文档,分享出来.</p>\n<h2 id=\"网址的分享\"><a href=\"#网址的分享\" class=\"headerlink\" title=\"网址的分享\"></a>网址的分享</h2><p><strong>Javascript教程:</strong><a href=\"https://wangdoc.com/javascript/index.html\" title=\"Javascript教程：\">https://wangdoc.com/javascript/index.html</a><br><strong>JS编程规范:</strong><a href=\"https://github.com/airbnb/javascript/tree/es5-deprecated/es5\" title=\"JS编程规范\">https://github.com/airbnb/javascript/tree/es5-deprecated/es5</a><br><strong>ECMAScript6入门:</strong><a href=\"https://es6.ruanyifeng.com/?search=%E7%AE%AD%E5%A4%B4&x=0&y=0\" title=\"ECMAScript6入门\">https://es6.ruanyifeng.com/?search=%E7%AE%AD%E5%A4%B4&amp;x=0&amp;y=0</a><br><strong>JavaScript帮助文档:</strong><a href=\"https://es6.ruanyifeng.com/?search=%E7%AE%AD%E5%A4%B4&x=0&y=0\" title=\"JavaScript帮助文**档\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects</a><br><strong>webStorm激活码获取:</strong><a href=\"http://idea.94goo.com/\" title=\"webStrom激活码领取\">http://idea.94goo.com/</a></p>\n","text":"变量的声明var、const、let的区别 表头 var let const 定义常量 √ 定义变量 √ √ 可被释放 √ √ √ 可被提升 √ 重复定义检查 ...","permalink":"/post/JavaScript代码技巧","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"前端","slug":"前端","count":1,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">变量的声明</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#var%E3%80%81const%E3%80%81let%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">var、const、let的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%8C%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">多行变量声明的优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E5%8F%96%E5%80%BC%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">数组取值的优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E5%8F%96%E5%80%BC%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">对象取值的优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E4%B8%8E-%E3%80%81%E9%80%BB%E8%BE%91%E6%88%96-%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">逻辑与 &amp;&amp; 、逻辑或 || 的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%BB%98%E8%AE%A4%E5%80%BC%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">默认值的优化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%A1%8Cif%E8%AF%AD%E5%8F%A5%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">单行if语句的优化</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%96%E9%9D%9E%E7%A9%BA%E5%AF%B9%E8%B1%A1%E5%80%BC%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">取非空对象值的优化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JSON%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">JSON的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JSON%E5%A3%B0%E6%98%8E%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">JSON声明的优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JSON%E5%8F%96%E5%80%BC%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">JSON取值的优化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">条件运算符的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if-else-%E8%AF%AD%E5%8F%A5%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">if else 语句的优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">方法调用的优化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E5%AE%83\"><span class=\"toc-text\">其它</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">链式调用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5\"><span class=\"toc-text\">字符串拼接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8C%85%E5%90%AB%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">包含判断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9A%84%E7%AE%80%E5%86%99%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">数组的简写方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">箭头函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E7%9A%84keys%E3%80%81values%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">对象的keys、values的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9A%84%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">数组的常用函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">字符串常用方法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">优化的注意事项</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E5%9D%80%E7%9A%84%E5%88%86%E4%BA%AB\"><span class=\"toc-text\">网址的分享</span></a></li></ol>","author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Lombok的使用一中级篇","uid":"f4f9a107b18653850d81e048925a42ea","slug":"Lombok的使用一中级篇","date":"2022-05-19T15:30:06.000Z","updated":"2025-03-11T03:18:37.881Z","comments":true,"path":"api/articles/Lombok的使用一中级篇.json","keywords":null,"cover":"/logo/bab9141327ca48e39abef6229b79cf9c.jpg","text":"高级注解解析@Builder是一个帮助类生成复杂的构建器 API。将允许我们使用以下的方式去实例化对象，但是对继承的类的属性会忽略。 123456Person....","permalink":"/post/Lombok的使用一中级篇","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/categories/Lombok.json"}],"tags":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/tags/Lombok.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"java基础常见面试题总结","uid":"b47dcd39598a93d4c21d7c5ce2d6464a","slug":"java基础常见面试题总结上","date":"2021-03-13T01:09:41.000Z","updated":"2025-03-13T07:54:00.654Z","comments":true,"path":"api/articles/java基础常见面试题总结上.json","keywords":null,"cover":null,"text":"基础Java语言有哪些特点 简单易学 面向对象 平台无关性（一次编写，随处运行） 支持多线程 可靠性 安全性 JVM vs JDK vs JREJVM ：Jav...","permalink":"/post/java基础常见面试题总结上","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"java","slug":"java","count":5,"path":"api/tags/java.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}