{"title":"Lombok的使用一基础篇","uid":"ad1f662ab87a679b9b7a6abe69e2649c","slug":"Lombok的使用一基础篇","date":"2022-05-19T15:30:06.000Z","updated":"2025-03-11T03:18:38.213Z","comments":true,"path":"api/articles/Lombok的使用一基础篇.json","keywords":null,"cover":"/logo/ba41a32b219e4b40ad055bbb52935896.jpg","content":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p><code>Lombok</code>是一款 Java 开发插件，使得 Java 开发者可以通过其定义的一些注解来消除业务工程中冗长和繁琐的代码</p>\n<h2 id=\"常用注解解析\"><a href=\"#常用注解解析\" class=\"headerlink\" title=\"常用注解解析\"></a>常用注解解析</h2><h3 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"@Data\"></a>@Data</h3><p><code>@Data</code>是一个快捷注解，包含<code>@Getter</code>,<code>@Setter</code>,<code>@ToString</code>,<code>@EqualsAndHashCode</code> and <code>@RequiredArgsConstructor</code>注解。当<code>@Data</code>设置于类上时，将自动生成<code>Getter</code>、<code>Setter</code>、<code>ToString</code>、<code>Equals</code>、<code>HashCode</code>方法和默认构造器。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后的实体类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">DataExample</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(<span class=\"keyword\">final</span> String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(<span class=\"keyword\">final</span> Object o)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o == <span class=\"built_in\">this</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!(o <span class=\"keyword\">instanceof</span> DataExample)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">DataExample</span> <span class=\"variable\">other</span> <span class=\"operator\">=</span> (DataExample)o;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!other.canEqual(<span class=\"built_in\">this</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">Object</span> <span class=\"variable\">this$name</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getName();</span><br><span class=\"line\">                <span class=\"type\">Object</span> <span class=\"variable\">other$name</span> <span class=\"operator\">=</span> other.getName();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>$name == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (other$name != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!<span class=\"built_in\">this</span>$name.equals(other$name)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canEqual</span><span class=\"params\">(<span class=\"keyword\">final</span> Object other)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> other <span class=\"keyword\">instanceof</span> DataExample;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">PRIME</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">$name</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getName();</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> result * <span class=\"number\">59</span> + ($name == <span class=\"literal\">null</span> ? <span class=\"number\">43</span> : $name.hashCode());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;DataExample(name=&quot;</span> + <span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Getter-and-Setter\"><a href=\"#Getter-and-Setter\" class=\"headerlink\" title=\"@Getter and @Setter\"></a>@Getter and @Setter</h3><p>当为某一字段设置<code>@Getter</code>、<code>@Setter</code>注解时将自动生成此字段的<code>Getter</code>、<code>Setter</code>方法。当为某实体类设置<code>@Getter</code>、<code>@Setter</code>注解时，相当于为类中所有非静态字段设置<code>@Getter</code>、<code>@Setter</code>注解。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Setter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@Setter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterSetterExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后的实体类\n\t</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterSetterExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"NoArgsConstructor、-RequiredArgsConstructor、-AllArgsConstructor构造器注解\"><a href=\"#NoArgsConstructor、-RequiredArgsConstructor、-AllArgsConstructor构造器注解\" class=\"headerlink\" title=\"@NoArgsConstructor、@RequiredArgsConstructor、@AllArgsConstructor构造器注解\"></a>@NoArgsConstructor、@RequiredArgsConstructor、@AllArgsConstructor构造器注解</h3><p><code>@NoArgsConstructor</code> 将生成一个没有参数的构造函数，如果有<code>final</code>字段需使用<code>@NoArgsConstructor(force = true)</code>初始化<br><code>@AllArgsConstructor</code> 为类中的每个字段生成一个带有 1 个参数的构造函数。标注<code>@NonNul</code>l参数会进行空检查。<br><code>@RequiredArgsConstructor</code> 生成构造包含所有必须字段的参数，包括含<code>@NotNull</code>注解的字段并做空检查，和<code>final</code>修饰且未初始化的字段。</p>\n<p>例如\n\t</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AccessLevel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.RequiredArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NonNull;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor(staticName = &quot;of&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor(access = AccessLevel.PROTECTED)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConstructorExample</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> x, y;</span><br><span class=\"line\">  <span class=\"meta\">@NonNull</span> <span class=\"keyword\">private</span> T description;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NoArgsExample</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span> <span class=\"keyword\">private</span> String field;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后的实体类\n\t</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConstructorExample</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> x, y;</span><br><span class=\"line\">  <span class=\"meta\">@NonNull</span> <span class=\"keyword\">private</span> T description;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"title function_\">ConstructorExample</span><span class=\"params\">(T description)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (description == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(<span class=\"string\">&quot;description&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.description = description;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; ConstructorExample&lt;T&gt; <span class=\"title function_\">of</span><span class=\"params\">(T description)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ConstructorExample</span>&lt;T&gt;(description);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@java</span>.beans.ConstructorProperties(&#123;<span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;description&quot;</span>&#125;)</span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"title function_\">ConstructorExample</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, T description)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (description == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(<span class=\"string\">&quot;description&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.y = y;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.description = description;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NoArgsExample</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span> <span class=\"keyword\">private</span> String field;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">NoArgsExample</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"EqualsAndHashCode\"><a href=\"#EqualsAndHashCode\" class=\"headerlink\" title=\"@EqualsAndHashCode\"></a>@EqualsAndHashCode</h3><p>任何类定义都可以用注释<code>@EqualsAndHashCode</code>来让<code>Lombok</code>生成<code>equals(Object other)</code>和<code>hashCode()</code>方法的实现。</p>\n<p>例如\n\t</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.EqualsAndHashCode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EqualsAndHashCodeExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">transient</span> <span class=\"type\">int</span> <span class=\"variable\">transientVar</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">double</span> score;</span><br><span class=\"line\">  <span class=\"meta\">@EqualsAndHashCode</span>.Exclude <span class=\"keyword\">private</span> <span class=\"type\">Shape</span> <span class=\"variable\">shape</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Square</span>(<span class=\"number\">5</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String[] tags;</span><br><span class=\"line\">  <span class=\"meta\">@EqualsAndHashCode</span>.Exclude <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@EqualsAndHashCode(callSuper=true)</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Square</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> width, height;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Square</span><span class=\"params\">(<span class=\"type\">int</span> width, <span class=\"type\">int</span> height)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.width = width;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.height = height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后的实体类\n\t</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EqualsAndHashCodeExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">transient</span> <span class=\"type\">int</span> <span class=\"variable\">transientVar</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">double</span> score;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">Shape</span> <span class=\"variable\">shape</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Square</span>(<span class=\"number\">5</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String[] tags;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@Override</span> <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object o)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (o == <span class=\"built_in\">this</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(o <span class=\"keyword\">instanceof</span> EqualsAndHashCodeExample)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"type\">EqualsAndHashCodeExample</span> <span class=\"variable\">other</span> <span class=\"operator\">=</span> (EqualsAndHashCodeExample) o;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!other.canEqual((Object)<span class=\"built_in\">this</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.getName() == <span class=\"literal\">null</span> ? other.getName() != <span class=\"literal\">null</span> : !<span class=\"built_in\">this</span>.getName().equals(other.getName())) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Double.compare(<span class=\"built_in\">this</span>.score, other.score) != <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!Arrays.deepEquals(<span class=\"built_in\">this</span>.tags, other.tags)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@Override</span> <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">PRIME</span> <span class=\"operator\">=</span> <span class=\"number\">59</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">temp1</span> <span class=\"operator\">=</span> Double.doubleToLongBits(<span class=\"built_in\">this</span>.score);</span><br><span class=\"line\">    result = (result*PRIME) + (<span class=\"built_in\">this</span>.name == <span class=\"literal\">null</span> ? <span class=\"number\">43</span> : <span class=\"built_in\">this</span>.name.hashCode());</span><br><span class=\"line\">    result = (result*PRIME) + (<span class=\"type\">int</span>)(temp1 ^ (temp1 &gt;&gt;&gt; <span class=\"number\">32</span>));</span><br><span class=\"line\">    result = (result*PRIME) + Arrays.deepHashCode(<span class=\"built_in\">this</span>.tags);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canEqual</span><span class=\"params\">(Object other)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> other <span class=\"keyword\">instanceof</span> EqualsAndHashCodeExample;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Square</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> width, height;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Square</span><span class=\"params\">(<span class=\"type\">int</span> width, <span class=\"type\">int</span> height)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.width = width;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.height = height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object o)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (o == <span class=\"built_in\">this</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!(o <span class=\"keyword\">instanceof</span> Square)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"type\">Square</span> <span class=\"variable\">other</span> <span class=\"operator\">=</span> (Square) o;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!other.canEqual((Object)<span class=\"built_in\">this</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"built_in\">super</span>.equals(o)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.width != other.width) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.height != other.height) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">PRIME</span> <span class=\"operator\">=</span> <span class=\"number\">59</span>;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      result = (result*PRIME) + <span class=\"built_in\">super</span>.hashCode();</span><br><span class=\"line\">      result = (result*PRIME) + <span class=\"built_in\">this</span>.width;</span><br><span class=\"line\">      result = (result*PRIME) + <span class=\"built_in\">this</span>.height;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canEqual</span><span class=\"params\">(Object other)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> other <span class=\"keyword\">instanceof</span> Square;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"NonNull\"><a href=\"#NonNull\" class=\"headerlink\" title=\"@NonNull\"></a>@NonNull</h3><p>您可以<code>@NonNull</code>在字段、方法、构造函数的参数上使用。这将导致<code>Lombok</code>为您生成一个空检查语句。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.NonNull;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NonNullExample</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Something</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">NonNullExample</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Person person)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = person.getName();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后的实体类\n\t</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.NonNull;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NonNullExample</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Something</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">NonNullExample</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Person person)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (person == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(<span class=\"string\">&quot;person is marked non-null but is null&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = person.getName();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"@Log\"></a>@Log</h3><p><code>Lombok</code>里关于<code>@Log</code>添加了多种变体，无论使用哪个，都将生成一个静态的<code>final log</code>字段，按照你使用的日志框架的通常规定的方式进行初始化，然后你可以使用它来编写日志语句。变体有<code>@CommonsLog</code>、<code>@Flogger</code>、<code>@JBossLog</code>、<code>@Log</code>、<code>@Log4j</code>、<code>@Log4j2</code>、<code>@Slf4j</code>、<code>@XSlf4j</code>、<code>@CustomLog</code>。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.java.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Log</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LogExample</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">    log.severe(<span class=\"string\">&quot;Something&#x27;s wrong here&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LogExampleOther</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">    log.error(<span class=\"string\">&quot;Something else is wrong here&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@CommonsLog(topic=&quot;CounterLog&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LogExampleCategory</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">    log.error(<span class=\"string\">&quot;Calling the &#x27;CounterLog&#x27; with a message&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后的实体类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LogExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> java.util.logging.<span class=\"type\">Logger</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> java.util.logging.Logger.getLogger(LogExample.class.getName());</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">    log.severe(<span class=\"string\">&quot;Something&#x27;s wrong here&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LogExampleOther</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> org.slf4j.<span class=\"type\">Logger</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.slf4j.LoggerFactory.getLogger(LogExampleOther.class);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">    log.error(<span class=\"string\">&quot;Something else is wrong here&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LogExampleCategory</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> org.apache.commons.logging.<span class=\"type\">Log</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.commons.logging.LogFactory.getLog(<span class=\"string\">&quot;CounterLog&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">    log.error(<span class=\"string\">&quot;Calling the &#x27;CounterLog&#x27; with a message&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"序言Lombok是一款 Java 开发插件，使得 Java 开发者可以通过其定义的一些注解来消除业务工程中冗长和繁琐的代码 常用注解解析@Data@Data是一...","permalink":"/post/Lombok的使用一基础篇","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/categories/Lombok.json"}],"tags":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/tags/Lombok.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E8%A8%80\"><span class=\"toc-text\">序言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">常用注解解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Data\"><span class=\"toc-text\">@Data</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Getter-and-Setter\"><span class=\"toc-text\">@Getter and @Setter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NoArgsConstructor%E3%80%81-RequiredArgsConstructor%E3%80%81-AllArgsConstructor%E6%9E%84%E9%80%A0%E5%99%A8%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">@NoArgsConstructor、@RequiredArgsConstructor、@AllArgsConstructor构造器注解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EqualsAndHashCode\"><span class=\"toc-text\">@EqualsAndHashCode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NonNull\"><span class=\"toc-text\">@NonNull</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Log\"><span class=\"toc-text\">@Log</span></a></li></ol></li></ol>","author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Lombok的使用一进阶篇","uid":"6a8b4d4d5ad2121dc1df69e7c613a802","slug":"Lombok的使用—进阶篇","date":"2022-05-25T15:30:06.000Z","updated":"2025-03-11T03:18:37.568Z","comments":true,"path":"api/articles/Lombok的使用—进阶篇.json","keywords":null,"cover":"/logo/Lombok的使用进阶篇.jpg","text":"进阶注解解析@SuperBuilder(实验性功能)是一个帮助类生成复杂的构建器 API。将循允许我们使用以下的方式去实例化对象，但是对继承的类的属性不会忽略,...","permalink":"/post/Lombok的使用—进阶篇","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/categories/Lombok.json"}],"tags":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/tags/Lombok.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lombok的使用一中级篇","uid":"f4f9a107b18653850d81e048925a42ea","slug":"Lombok的使用一中级篇","date":"2022-05-19T15:30:06.000Z","updated":"2025-03-11T03:18:37.881Z","comments":true,"path":"api/articles/Lombok的使用一中级篇.json","keywords":null,"cover":"/logo/bab9141327ca48e39abef6229b79cf9c.jpg","text":"高级注解解析@Builder是一个帮助类生成复杂的构建器 API。将允许我们使用以下的方式去实例化对象，但是对继承的类的属性会忽略。 123456Person....","permalink":"/post/Lombok的使用一中级篇","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/categories/Lombok.json"}],"tags":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/tags/Lombok.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}