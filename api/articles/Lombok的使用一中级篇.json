{"title":"Lombok的使用一中级篇","uid":"f4f9a107b18653850d81e048925a42ea","slug":"Lombok的使用一中级篇","date":"2022-05-19T15:30:06.000Z","updated":"2025-03-11T03:18:37.881Z","comments":true,"path":"api/articles/Lombok的使用一中级篇.json","keywords":null,"cover":"/logo/bab9141327ca48e39abef6229b79cf9c.jpg","content":"<h2 id=\"高级注解解析\"><a href=\"#高级注解解析\" class=\"headerlink\" title=\"高级注解解析\"></a>高级注解解析</h2><h3 id=\"Builder\"><a href=\"#Builder\" class=\"headerlink\" title=\"@Builder\"></a>@Builder</h3><p>是一个帮助类生成复杂的构建器 API。将允许我们使用以下的方式去实例化对象，但是对继承的类的属性会忽略。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person.builder()</span><br><span class=\"line\">   .name(<span class=\"string\">&quot;Adam Savage&quot;</span>)</span><br><span class=\"line\">   .city(<span class=\"string\">&quot;San Francisco&quot;</span>)</span><br><span class=\"line\">   .job(<span class=\"string\">&quot;Mythbusters&quot;</span>)</span><br><span class=\"line\">   .job(<span class=\"string\">&quot;Unchained Reaction&quot;</span>)</span><br><span class=\"line\">  .build();</span><br></pre></td></tr></table></figure>\n<p>当你想为某一字段使用默认值时，使用<code>@Builder.Default</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Builder</span>.Default </span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">long</span> <span class=\"variable\">created</span> <span class=\"operator\">=</span> System.currentTimeMillis()</span><br></pre></td></tr></table></figure>\n<p>当某个字段为集合类型时，使用<code>@Singular</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Singular</span> </span><br><span class=\"line\"><span class=\"keyword\">private</span> Set&lt;String&gt; occupations;</span><br></pre></td></tr></table></figure>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Builder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Singular;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BuilderExample</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Builder</span>.Default <span class=\"keyword\">private</span> <span class=\"type\">long</span> <span class=\"variable\">created</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">  <span class=\"meta\">@Singular</span> <span class=\"keyword\">private</span> Set&lt;String&gt; occupations;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的实体类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BuilderExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">long</span> created;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Set&lt;String&gt; occupations;</span><br><span class=\"line\">  </span><br><span class=\"line\">  BuilderExample(String name, <span class=\"type\">int</span> age, Set&lt;String&gt; occupations) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.occupations = occupations;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> $<span class=\"keyword\">default</span>$created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> System.currentTimeMillis();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BuilderExampleBuilder <span class=\"title function_\">builder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BuilderExampleBuilder</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BuilderExampleBuilder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">long</span> created;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> created$set;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> java.util.ArrayList&lt;String&gt; occupations;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BuilderExampleBuilder() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExampleBuilder <span class=\"title function_\">created</span><span class=\"params\">(<span class=\"type\">long</span> created)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.created = created;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.created$set = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExampleBuilder <span class=\"title function_\">name</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExampleBuilder <span class=\"title function_\">age</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExampleBuilder <span class=\"title function_\">occupation</span><span class=\"params\">(String occupation)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.occupations == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.occupations = <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.ArrayList&lt;String&gt;();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"built_in\">this</span>.occupations.add(occupation);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExampleBuilder <span class=\"title function_\">occupations</span><span class=\"params\">(Collection&lt;? extends String&gt; occupations)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.occupations == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.occupations = <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.ArrayList&lt;String&gt;();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.occupations.addAll(occupations);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExampleBuilder <span class=\"title function_\">clearOccupations</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.occupations != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.occupations.clear();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BuilderExample <span class=\"title function_\">build</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// complicated switch statement to produce a compact properly sized immutable set omitted.</span></span><br><span class=\"line\">      Set&lt;String&gt; occupations = ...;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BuilderExample</span>(created$set ? created : BuilderExample.$<span class=\"keyword\">default</span>$created(), name, age, occupations);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@java</span>.lang.Override</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;BuilderExample.BuilderExampleBuilder(created = &quot;</span> + <span class=\"built_in\">this</span>.created + <span class=\"string\">&quot;, name = &quot;</span> + <span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;, age = &quot;</span> + <span class=\"built_in\">this</span>.age + <span class=\"string\">&quot;, occupations = &quot;</span> + <span class=\"built_in\">this</span>.occupations + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SneakyThrows-慎用\"><a href=\"#SneakyThrows-慎用\" class=\"headerlink\" title=\"@SneakyThrows(慎用)\"></a>@SneakyThrows(慎用)</h3><p>可以用来偷偷抛出检查异常，而无需在方法的<code>throws</code>子句中实际声明它。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.SneakyThrows;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SneakyThrowsExample</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@SneakyThrows(UnsupportedEncodingException.class)</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">utf8ToString</span><span class=\"params\">(<span class=\"type\">byte</span>[] bytes)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(bytes, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Throwable</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的实体</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.Lombok;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SneakyThrowsExample</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">utf8ToString</span><span class=\"params\">(<span class=\"type\">byte</span>[] bytes)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(bytes, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> Lombok.sneakyThrow(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Throwable</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable t) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> Lombok.sneakyThrow(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Synchronized-慎用\"><a href=\"#Synchronized-慎用\" class=\"headerlink\" title=\"@Synchronized(慎用)\"></a>@Synchronized(慎用)</h3><p>此注解是<code>synchronized</code>方法修饰符的一个更安全的变体。就像<code>synchronized</code>，注解只能用于静态和实例方法。它的操作类似于<code>synchronized</code>关键字，但它锁定不同的对象。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.Synchronized;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SynchronizedExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">Object</span> <span class=\"variable\">readLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@Synchronized</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@Synchronized</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">answerToLife</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">42</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@Synchronized(&quot;readLock&quot;)</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">foo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;bar&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的实体</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SynchronizedExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Object</span> <span class=\"variable\">$LOCK</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">Object</span> <span class=\"variable\">$lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">Object</span> <span class=\"variable\">readLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span>($LOCK) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">answerToLife</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span>($lock) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">42</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">foo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span>(readLock) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;bar&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With\"><a href=\"#With\" class=\"headerlink\" title=\"@With\"></a>@With</h3><p>当你需要克隆对象，修改一个值而保留其他值不变时，则使用此注解。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.AccessLevel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NonNull;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.With;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WithExample</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@With(AccessLevel.PROTECTED)</span> <span class=\"meta\">@NonNull</span> <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\">  <span class=\"meta\">@With</span> <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">WithExample</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的实体类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.NonNull;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WithExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"meta\">@NonNull</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">WithExample</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (name == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> WithExample <span class=\"title function_\">withName</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (name == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.lang.NullPointerException(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.name == name ? <span class=\"built_in\">this</span> : <span class=\"keyword\">new</span> <span class=\"title class_\">WithExample</span>(name, age);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> WithExample <span class=\"title function_\">withAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.age == age ? <span class=\"built_in\">this</span> : <span class=\"keyword\">new</span> <span class=\"title class_\">WithExample</span>(name, age);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Getter-lazy-true\"><a href=\"#Getter-lazy-true\" class=\"headerlink\" title=\"@Getter(lazy&#x3D;true)\"></a>@Getter(lazy&#x3D;true)</h3><p>标注字段为懒加载字段，懒加载字段在创建对象时不会进行初始化，而是在第一次访问的时候才会初始化，后面再次访问也不会重复初始化。</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterLazyExample</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Getter(lazy=true)</span> <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">double</span>[] cached = expensive();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">double</span>[] expensive() &#123;</span><br><span class=\"line\">    <span class=\"type\">double</span>[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">1000000</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; result.length; i++) &#123;</span><br><span class=\"line\">      result[i] = Math.asin(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的实体</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterLazyExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> java.util.concurrent.AtomicReference&lt;java.lang.Object&gt; cached = <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.concurrent.AtomicReference&lt;java.lang.Object&gt;();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">double</span>[] getCached() &#123;</span><br><span class=\"line\">    java.lang.<span class=\"type\">Object</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.cached.get();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span>(<span class=\"built_in\">this</span>.cached) &#123;</span><br><span class=\"line\">        value = <span class=\"built_in\">this</span>.cached.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">final</span> <span class=\"type\">double</span>[] actualValue = expensive();</span><br><span class=\"line\">          value = actualValue == <span class=\"literal\">null</span> ? <span class=\"built_in\">this</span>.cached : actualValue;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.cached.set(value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"type\">double</span>[])(value == <span class=\"built_in\">this</span>.cached ? <span class=\"literal\">null</span> : value);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">double</span>[] expensive() &#123;</span><br><span class=\"line\">    <span class=\"type\">double</span>[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">1000000</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; result.length; i++) &#123;</span><br><span class=\"line\">      result[i] = Math.asin(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Cleanup\"><a href=\"#Cleanup\" class=\"headerlink\" title=\"@Cleanup\"></a>@Cleanup</h3><p>主要用来修饰 IO 流相关类, 会在 <code>finally</code> 代码块中对该资源进行 <code>close()</code>;</p>\n<p>例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.Cleanup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CleanupExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Cleanup</span> <span class=\"type\">InputStream</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"meta\">@Cleanup</span> <span class=\"type\">OutputStream</span> <span class=\"variable\">out</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(args[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"type\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">10000</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> in.read(b);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (r == -<span class=\"number\">1</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      out.write(b, <span class=\"number\">0</span>, r);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的实体</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CleanupExample</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"type\">OutputStream</span> <span class=\"variable\">out</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(args[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">10000</span>];</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">          <span class=\"type\">int</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> in.read(b);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (r == -<span class=\"number\">1</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          out.write(b, <span class=\"number\">0</span>, r);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (out != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          out.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (in != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        in.close();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","text":"高级注解解析@Builder是一个帮助类生成复杂的构建器 API。将允许我们使用以下的方式去实例化对象，但是对继承的类的属性会忽略。 123456Person....","permalink":"/post/Lombok的使用一中级篇","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/categories/Lombok.json"}],"tags":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/tags/Lombok.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%BA%A7%E6%B3%A8%E8%A7%A3%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">高级注解解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Builder\"><span class=\"toc-text\">@Builder</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SneakyThrows-%E6%85%8E%E7%94%A8\"><span class=\"toc-text\">@SneakyThrows(慎用)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Synchronized-%E6%85%8E%E7%94%A8\"><span class=\"toc-text\">@Synchronized(慎用)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#With\"><span class=\"toc-text\">@With</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Getter-lazy-true\"><span class=\"toc-text\">@Getter(lazy&#x3D;true)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Cleanup\"><span class=\"toc-text\">@Cleanup</span></a></li></ol></li></ol>","author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Lombok的使用一基础篇","uid":"ad1f662ab87a679b9b7a6abe69e2649c","slug":"Lombok的使用一基础篇","date":"2022-05-19T15:30:06.000Z","updated":"2025-03-11T03:18:38.213Z","comments":true,"path":"api/articles/Lombok的使用一基础篇.json","keywords":null,"cover":"/logo/ba41a32b219e4b40ad055bbb52935896.jpg","text":"序言Lombok是一款 Java 开发插件，使得 Java 开发者可以通过其定义的一些注解来消除业务工程中冗长和繁琐的代码 常用注解解析@Data@Data是一...","permalink":"/post/Lombok的使用一基础篇","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/categories/Lombok.json"}],"tags":[{"name":"Lombok","slug":"Lombok","count":3,"path":"api/tags/Lombok.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"JavaScript代码技巧","uid":"91e0f6f330b5dca608acfed732198bf6","slug":"JavaScript代码技巧","date":"2022-05-16T15:05:06.000Z","updated":"2025-03-11T03:18:35.967Z","comments":true,"path":"api/articles/JavaScript代码技巧.json","keywords":null,"cover":"/logo/97b97ee1173042d5ba667df7ecbe43f6.png","text":"变量的声明var、const、let的区别 表头 var let const 定义常量 √ 定义变量 √ √ 可被释放 √ √ √ 可被提升 √ 重复定义检查 ...","permalink":"/post/JavaScript代码技巧","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"前端","slug":"前端","count":1,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}